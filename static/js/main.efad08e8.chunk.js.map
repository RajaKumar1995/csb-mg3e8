{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/ExpensesFolder/ExpenseDate.js","components/CarUi/Card.js","components/ExpensesFolder/ExpenseItem.js","components/ExpensesFolder/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpensesFolder/ExpensesChart.js","components/ExpensesFolder/ExpensesFilter.js","components/ExpensesFolder/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","enteredTitle","setEnteredTitle","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","console","log","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","Year","getFullYear","Day","day","Card","classes","children","ExpenseItem","ExpensesList","item","length","map","expense","ChartBAr","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpenseChart","chartDataPoints","expenses","getMonth","ExpensesFilter","selected","onChangeFilter","Expenses","filterYear","setFilterYear","filterExpenses","filter","selectedYear","ExpensesChart","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efad08e8.chunk.js","sourcesContent":["import React,{useState} from \"react\";\nimport \"./ExpenseForm.css\";\n\n\nconst ExpenseForm = (props) =>{\n\n    const [enteredAmount , setEnteredAmount] = useState('');\n    const [enteredDate , setEnteredDate] = useState('');\n    const [enteredTitle ,setEnteredTitle]= useState('');\n\n  //  const [userInput , setUserInput] = useState({\n  //      enteredAmount: '',\n  //      enteredDate: '' ,\n  //      enteredTitle: ''\n  //  });\n\n    const titleChangeHandler = (event)  =>  {\n     //setUserInput( (prevState) => {\n     //    return {\n     //        ...prevState,\n     //        enteredTitle: event.target.value \n     //    }\n     //})\n        //   setUserInput({\n     //       ...userInput,\n     //       enteredTitle: event.target.value\n     //   })\n        setEnteredTitle(event.target.value); \n        console.log(event.target.value);\n    };\n\n    const amountChangeHandler = (event) => {\n      //  setUserInput({\n      //      ...userInput,\n      //      enteredAmount: event.target.value\n      //  })\n        setEnteredAmount(event.target.value);\n        console.log(event.target.value);\n    };\n\n    const dateChangeHandler = (event) => {\n       // setUserInput({\n       //     ...userInput,\n       //     enteredDate: event.target.value\n       // })\n        setEnteredDate(event.target.value);\n        console.log(event.target.value);\n    };\n\n    const submitHandler = (event) => {\n            event.preventDefault();\n\n            const expenseData = {\n                title: enteredTitle,\n                amount: +enteredAmount,\n                date: new Date(enteredDate)\n            };\n            console.log(expenseData);  \n            \n            props.onSaveExpenseData(expenseData);\n            setEnteredAmount(''); // to set inputs to null after above steps are completed according to flow.\n            setEnteredDate('');\n            setEnteredTitle('');\n    };\n\n\nreturn <form onSubmit = {submitHandler} >\n\n    <div className='new-expense__controls'>\n\n        <div className='new-expense__control'>\n            <label>Title</label>\n            <input \n            type=\"text\" \n            value={enteredTitle} \n            onChange = {titleChangeHandler} /> \n        </div>\n\n        <div className='new-expense__control'>\n            <label>Amount</label>\n            <input \n            type=\"number\" \n            min='0.01' \n            step='0.01' \n            value ={enteredAmount} \n            onChange= {amountChangeHandler} /> \n        </div>\n\n        <div className='new-expense__control'>\n            <label>Date</label>\n            <input \n            type=\"date\" \n            min=\"2019-01-01\"  \n            max=\"2022-12-22\" \n            value = {enteredDate}\n            onChange={dateChangeHandler} /> \n        </div>\n\n    </div>\n\n    <div className=\"new-expense__actions\">\n    <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n    </div>\n</form>\n};\n\nexport default ExpenseForm;","import React,{useState} from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n    const [isEditing ,setIsEditing] = useState(false);\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n\n            const expenseData = {\n                ...enteredExpenseData,\n                id: Math.random().toString()\n            };\n            console.log(expenseData);\n\n            props.onAddExpense(expenseData);\n            setIsEditing(false);\n         };\n         \n         const stopEditingHandler = () =>  {\n            setIsEditing(false);\n        };    \n\n    const startEditingHandler = ()   => {\n        setIsEditing(true);\n    };\n\n    return <div className=\"new-expense\">\n            {!isEditing && <button onClick={startEditingHandler} >Add new Expense</button>}\n        {isEditing && <ExpenseForm \n        onSaveExpenseData={saveExpenseDataHandler} \n        onCancel={stopEditingHandler} />}\n    </div>\n};\n\nexport default NewExpense;","import \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props){\n\n\n    \n    const month = props.date.toLocaleString('en-US',{month: \"long\"});\n    const Year = props.date.getFullYear();\n    const Day = props.date.toLocaleString('en-US',{day: \"2-digit\"});\n   \n    return (\n        <div className=\"expense-date\">\n            <div className=\"expense-date__month\">{month}</div>\n            <div className=\"expense-date__year\">{Year}</div>\n            <div className=\"expense-date__day \">{Day}</div>\n            </div>\n    )\n}\n\nexport default ExpenseDate;","\nimport \"./Card.css\";\nfunction Card(props){\n    const classes = 'card ' + props.className ;\nreturn  <div className={classes}>{props.children}</div>    ;\n\n}\n//console.log(Card);\nexport default Card;","import React  from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\"\nimport Card from \"../CarUi/Card\";\n\n\nfunction ExpenseItem(props){\n\n  //  const [title, setTitle] = useState(props.title);\n//let title = props.title;\n//console.log(\"Expense evaluated by react\");\n//const clickHandler = ()  => {\n //   setTitle('Updated');\n   // title = 'Update'; // here we are changing the tilte but it won't reflect without hooks because of flow of React\n  //  console.log('Updated!!');\n    //console.log(title);\n  //  };\n//before </card>    <! --   <button onClick={clickHandler}>Change Title</button>   --> \n\n    return (\n        <li>\n        <Card className=\"expense-item\">\n            <ExpenseDate\n            date={props.date}\n             />\n            <div className=\"expense-item__description\">\n            <h2>{props.title}</h2>\n            <div className=\"expense-item__price\">${props.amount}</div>\n            </div>\n         \n        </Card>\n        </li>\n  );\n}\n\nexport default ExpenseItem;","\nimport React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = props => {\n    \n       if (props.item.length === 0) {\n      return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2> ;\n    }\n\n    return <ul className=\"expenses-list\">\n    {props.item.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n\n};\n\nexport default ExpensesList;","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBAr = (props) => {\n\n\n\n    let barFillHeight=\"0%\";\n\n    if (props.maxValue > 0){\n        barFillHeight = Math.round((props.value/props.maxValue)*100) + \"%\";\n    }\n\n    return <div className=\"chart-bar\">\n        <div className=\"chart-bar__inner\">\n            <div className=\"chart-bar__fill\" \n            style={{height: barFillHeight}}></div>\n        </div>\n        <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n}\n\nexport default ChartBAr;\n\n","\nimport React from 'react';\n\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\n\nconst ExpenseChart = (props) => {\n    const chartDataPoints = [\n        {label:\"Jan\", value:0},\n        {label:\"Feb\", value:0},\n        {label:\"Mar\", value:0},\n        {label:\"Apr\", value:0},\n        {label:\"May\", value:0},\n        {label:\"Jun\", value:0},\n        {label:\"Jul\", value:0},\n        {label:\"Aug\", value:0},\n        {label:\"Sept\", value:0},\n        {label:\"Oct\", value:0},\n        {label:\"Nov\", value:0},\n        {label:\"Dec\", value:0}\n\n    ];\n\n    for (const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount ;\n    }\n    return <Chart dataPoints= {chartDataPoints} />\n};\n\nexport default ExpenseChart;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  \n    const dropDownChangeHandler = (event) => {\n        //console.log(event.target.value);\n        props.onChangeFilter(event.target.value);\n    };\n    return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropDownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import React,{useState} from 'react';\n\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport Card from  \"../CarUi/Card\";\nimport ExpenseFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\n\n\n\n\n\nconst Expenses = (props) => {\n  const [filterYear, setFilterYear] = useState('2020');\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilterYear(selectedYear);\n  };\n\n  const filterExpenses = props.item.filter((expense) => {\n    return expense.date.getFullYear().toString() === filterYear;\n  });\n\n\n\n  return (\n    <div>\n      <Card className='expenses'>\n        <ExpenseFilter\n          selected={filterYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        <ExpensesChart expenses = {filterExpenses} />\n        <ExpensesList item={filterExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nimport Expenses from \"./components/ExpensesFolder/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    console.log(\"In App.js\");\n    console.log(expense); //taking data from form submit\n    //setExpenses([expense , ...expenses]);\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses item={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}